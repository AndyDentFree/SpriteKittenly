//
//  ColoredShapeSceneMaker.swift
//  ToP3orNotToP3
//
//  Created by Andy Dent on 11/03/2025.
//  Emitter creation logic generated by https://www.purrticles.com app & tweaked slightly by hand

import SpriteKit
import SwiftUI // to get Color

// using a class so can have a ref instance shared between SpriteKitContainerWithGen and its nested Coordinator class
class ColoredShapeSceneMaker: ResizeableSceneMaker {
    private var colorFrom: () -> Color  // closure provides a SwiftUI Color which we will convert below
    
    init(colored colorSource: @escaping () -> Color) {
        self.colorFrom = colorSource
    }
    
    func makeScene(sizedTo: CGSize) -> SKScene {
        print("Making scene sized (\(sizedTo.width), \(sizedTo.height))")
        let ret = TappableScene(size: sizedTo, shapeColorProvider: {
            let pickedColor = self.colorFrom()
            if let asCG = pickedColor.cgColor {
                // simple conversion has problems with P3 eg 0xFF00FF showing green instead of vibrant pink
                return SKColor(cgColor: asCG)
            }
            print("Unable to convert the picked color \(pickedColor) to a cgColor")
            return SKColor.yellow
        })
        ret.scaleMode = SKSceneScaleMode.resizeFill
        return ret
    }
    
    // take oldsize in case adjustments should scale relative to that or want to compare
    // note that the position setting here is basically just a copy of that in create methods below
    // but that might not always be the case so we don't abstract a single position setter
    func viewResized(from oldSize: CGSize, to newSize: CGSize) {
        //confetti?.position = CGPoint(x: newSize.width / 2, y: newSize.height / 2)
    }
    
    func forgetScene() {
    }
}
